# ベースイメージに uv と Python 3.13 を含むスリム環境を使用
FROM ghcr.io/astral-sh/uv:python3.13-bookworm-slim

# 作業ディレクトリを /app に設定
WORKDIR /app

# バイトコードのコンパイルを有効化
ENV UV_COMPILE_BYTECODE=1

# マウントされたボリューム内のキャッシュからコピーする設定
ENV UV_LINK_MODE=copy

# 依存関係のインストール（ロックファイルを使用）
# キャッシュ付きで uv.lock と pyproject.toml をマウント
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --no-dev

# 残りのアプリケーションコードを追加し、プロジェクト自体をインストール
# 依存関係と切り分けることでレイヤーキャッシュを最適化
COPY . /app
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen

# チェック系コマンドを実行
RUN uv run --group dev task check
