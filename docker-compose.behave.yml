version: '3.8'

services:
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -inMemory -sharedDb"
    volumes:
      - dynamodb_data:/home/dynamodblocal/data

  dynamodb-init:
    image: amazon/aws-cli:latest
    container_name: dynamodb-init
    depends_on:
      - dynamodb-local
    environment:
      AWS_ACCESS_KEY_ID: dummy
      AWS_SECRET_ACCESS_KEY: dummy
      AWS_DEFAULT_REGION: ap-northeast-1
      AWS_PAGER: ""
    volumes:
      - ./scripts/init-dynamodb.sh:/init-dynamodb.sh:ro
    entrypoint: [ "sh", "/init-dynamodb.sh" ]

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.local
    container_name: fastapi
    command: uv run --group dev task local-run
    ports:
      - "8001:8001"
    environment:
      AWS_ACCESS_KEY_ID: dummy
      AWS_SECRET_ACCESS_KEY: dummy
      AWS_DEFAULT_REGION: ap-northeast-1
      DYNAMODB_PRODUCT_TABLE_NAME: products
      DYNAMODB_ENDPOINT_URL: http://dynamodb-local:8000
    depends_on:
      - dynamodb-local
      - dynamodb-init

  behave-runner:
    build:
      context: .
      dockerfile: Dockerfile.behave
    container_name: behave-runner
    command: uv run behave -D AllureFormatter.hide_excluded=true
    environment:
      AWS_ACCESS_KEY_ID: dummy
      AWS_SECRET_ACCESS_KEY: dummy
      AWS_DEFAULT_REGION: ap-northeast-1
      DYNAMODB_PRODUCT_TABLE_NAME: products
      DYNAMODB_ENDPOINT_URL: http://dynamodb-local:8000
      FASTAPI_SERVER_URL: http://fastapi:8001
    volumes:
      - ./allure-results:/app/allure-results
    depends_on:
      dynamodb-local:
        condition: service_started
      dynamodb-init:
        condition: service_completed_successfully
      fastapi:
        condition: service_started
    restart: "no"

volumes:
  dynamodb_data:
